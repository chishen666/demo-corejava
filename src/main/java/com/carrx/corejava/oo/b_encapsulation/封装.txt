一.封装

1.封装的定义
    隐藏对象的属性和实现细节,仅对外提供公共访问方式
    
2.封装的好处
    1)将变化隔离
    2)提高易用性
    3)提高重用性
    4)提高安全性
    
3.封装的原则
    1)将不需要对外提供的内容都隐藏起来
    2)把属性都隐藏,提供公共方法对其访问
    
4.封装方法
    private:私有,权限修饰符:用于修饰类中成员,私有只在本类中有效

            修饰符                      所有类       子类            同包           本身
    public      YES   YES   YES    YES
    protected   NO    YES   YES    YES
    []          NO    NO    YES    YES
    private     NO    NO    NO     YES
    
            注意:私有仅仅是封装的一种表现形式
            
二.构造函数
1.特点
    1)函数名与类名相同
    2)不用定义返回值
    3)不可以写return语句
    
2.作用
    给对象初始化,对象一建立就会调用与之对应的构造函数
    
3.注意
    1)默认构造函数的特点
    2)多个构造函数是以重载的形式存在的
    
4.构造函数与一般函数的区别
    1)写法上不同
    2)运行上不同
                构造函数在对象一建立就运行,给对象初始化;
                一般函数是对象调用才执行,给是对象添加对象具备的功能
                
三.构造代码块
    {
                    静态代码块中的执行语句。
    }
    
1.特点
    给所有对象进行初始化,定义共性内容,优先于构造函数执行且只执行一次
    
2.构造代码块与构造函数区别
    构造代码块:给所有对象进行初始化
    构造函数:给指定对象进行初始化
    
四.this关键字
    代表本类对象,也即所在函数所属对象的引用
 
1.用法
    1)局部变量和成员变量同名时
    2)构造函数剑调用
    
五.static关键字
    用于修饰成员变量(实例变量+类变量)+成员函数
    方法区:类中的方法,类中的共享数据
    
1.静态特点
    1)随着类的加载而加载,消失而消失,生命周期长
    2)优先于对象存在
    3)被所有对象共享
    4)被类名调用
    
2.实例变量和类变量的区别：
    1)存放位置。
                类变量随着类的加载而存在于方法区中。
                实例变量随着对象的建立而存在于堆内存中。
    2)生命周期：
                类变量生命周期最长,随着类的消失而消失。
                实例变量生命周期随着对象的消失而消失。
                
3.静态使用注意事项：
    1)静态方法只能访问静态成员。
                非静态方法既可以访问静态也可以访问非静态。
    2)静态方法中不可以定义this,super关键字。
                因为静态优先于对象存在。所以静态方法中不可以出现this。
    3)主函数是静态的。
    
4.静态有利有弊
    利处：对对象的共享数据进行单独空间的存储,节省空间。没有必要每一个对象中都存储一份。
        可以直接被类名调用。
    弊端：生命周期过长。
        访问出现局限性。(静态虽好,只能访问静态。)
        
5.什么时候使用静态?
    1)静态变量
                当对象中出现共享数据时,该数据被静态所修饰。
                对象中的特有数据要定义成非静态存在于堆内存中。
    2)静态函数
                当功能内部没有访问到静态数据(对象的特有数据),
                那么该功能可以定义成静态的。
                
六.静态代码块
    static
    {
                    静态代码块中的执行语句。
    }

1.特点
    随着类的加载而执行,只执行一次,并优先于主函数,用于给类进行初始化的。

七.主函数
public static void main(String[] args) 

主函数：是一个特殊的函数。作为程序的入口,可以被jvm调用。

主函数的定义：
    public：代表着该函数访问权限是最大的。
    static：代表主函数随着类的加载就已经存在了。
    void：主函数没有具体的返回值。
    main：不是关键字,但是是一个特殊的单词,可以被jvm识别。
        （String[] arr）:函数的参数,参数类型是一个数组,该数组中的元素是字符串。字符串类型的数组。

主函数是固定格式的：jvm识别。

jvm在调用主函数时,传入的是new String[0];
    
八.对象初始化过程
    Person p = new Person("zhangsan",20);该句话都做了什么事情？
    
    1)因为new用到了Person.class.所以会先找到Person.class文件并加载到内存中。
    2)执行该类中的static代码块,如果有的话,给Person.class类进行初始化。
    3)在堆内存中开辟空间,分配内存地址。
    4)在堆内存中建立对象的特有属性。并进行默认初始化。
    5)对属性进行显示初始化。
    6)对对象进行构造代码块初始化。
    7)对对象进行对应的构造函数初始化。
    8)将内存地址付给栈内存中的p变量。
    
九.对象调用成员过程











