Java语言特征

Java之父:詹姆斯.格斯林

Java原属于sun公司,现属于oracle公司.


一.跨平台:
   write once,run everywhere! -- 一次编译,到处运行
   
   原理:同一个字节码文件加载到不同平台的JVM上运行出相同的结果


二.面向对象(OO -- Oriented Object)
   Java是一种面向对象的编程语言(OOP)


三.内置了大量的类库
   在程序员编程时提供的现有的功能代码,可以直接调用
----------------------------------------------------------------------------

Java版本:

JavaSE(Java Standard Edition)		Java标准版,专门开发桌面级应用
	JDK:Java Development Kit		Java开发工具包
	
	JDK版本:1.0,1.1,1.2,1.3,1.4,1.5(5.0),6.0,7.0,8.0
	
	JRE:Java Runtime Environment	Java运行环境
	
	JVM:Java Virtual Machine		Java虚拟机
	

JavaEE(Java Enterprise Edition)		Java企业版,专门开发大型企业级应用
	它是一个体系,不是一门具体的技术,包含EJB,Servlet,JSP...等技术


JavaME(Java Micro Edition)			Java微型版,专门开发移动设备程序和嵌入式程序


API(Application Programming Interface)	    应用程序接口
==> 面向程序员

SPI(Service Provider Interface)          	服务供应商接口
==> 面向服务供应商

--------------------------------------------------------------------------------

Java程序运行的原理:

					 	编译器编译(Javac)								JVM加载字节码文件运行
   MyFirst.java		   ------------------>			MyFirst.class		---------------------> 结果
Java源文件,人的语言	   <------------------		Java字节码文件,机器语言
						     反编译


Java程序的构成:

类名.java

//包结构声明
package 所在的包名;

//导入的内容
import 导入的类的全限定名;

//类的声明
public class 类名 {
	
	//方法
	public static void main(String[] args){
		
		//方法体,代码块
		System.out.println("...");
	}
}


一.包结构

关键字:package

概念:它相当于文件夹结构,它的作用就是便于存储,分类,方便管理.

在企业级规范中,包名必须采用公司域名倒置形式

例如:
百度开发的应用

BaiduMap				--		项目名
	com.baidu.entity	--		包名(专门用来放实体类)
	com.baidu.util		--		包名(专门用来放工具类)
	com.baidu.image		--		包名(专门用来放图片)
	com.baidu.test		--		包名(专门用来放测试类)
	...
	
注意:
1.如果有包结构,则类的全名:
包名.类名(全限定名)		com.corejava.day01.MyFirstJava

2.包结构的声明必须写在一个类的第一行


二.导入

关键字:import

作用:使用外界其他类中的功能代码

注意:
1.如果这个外界类在同包下,则不需要import
2.如果被导入的类在java.lang包下,则不需要import

3.如果导入时导入同一个包下多个类,则可以简写成java.util.*;
  此写法不推荐使用,原因是会损耗性能.


三.类的声明

public class 类名{}

注意:
类名必须符合以下规范
1.类名必须由数字,字母,_,$或者汉字组成,但是不能是数字开头
2.类名的长度没有限制
3.类名中的中文虽然可以使用,但是不推荐,原因是可能出现乱码问题
4.类名不能是Java关键字 + 保留字(const,goto) + 3个字面量(true,false,null)
5.最好不要是Java内置对象类型
  
  当自定义的类名与API中的类名相同,而该类中又去调用了API,则此时
  被调用的API会无法调用.
  
6.类名的命名规范推荐驼峰命名法,每个单词首字母都大写
  方法名的命名规则首字母小写,以后每个单词首字母大写
  包名的命名规范全部采用小写字母,中间用.隔开

7.类名必须保证见名知意!


四.方法

作用:封装一个功能,用来被调用实现某一个具体的业务功能

方法的完整结构:
修饰符 返回类型 方法名([参数列表]) [可抛出的异常]{
	//方法体
}

目前需要掌握的结构:
public 返回类型 方法名([参数列表]) {
	//方法体
}

main()方法:
是程序的主入口,任何程序想要运行,都必须从main()方法进入启动,在main()方法中,
代码从宏观上讲是自上而下的依次运行.

注意:类和类之间是可以相互调用的,也就是说在一个项目中可以只要一个main()方法,
     就可以驱动所有的类.
---------------------------------------------------------------------------

注释

作用:给代码添加的说明信息,方便日后查阅,以及项目的持续开发

单行注释,一般用来修饰代码语句
//...


多行注释,一般用来修饰代码块或者语句块
/*
 ...
 ...
 ...
 */

文档注释,一般用来修饰类或者方法
/**
  ...
  ...
  ...
 */
 
注意:文档注释拥有更加强大的功能,可以定义很多说明,包括
     是否过时,从哪个版本开始,另参见,版本号,日期时间,作者等信息,
     并且可以把这些信息通过javadoc指令来生成API文档.
     
     Project --> Generate Javadoc -->选择生成路径
---------------------------------------------------------------------------

java.lang.Math		Java数学类,提供了数学运算的常用方法

//获取圆周率
Math.PI;

//获取绝对值
Math.abs(int i)

//获取较大数
Math.max(int i,int j);

//获取较小值
Math.min(int i,int j);

//指数运算,i的j次方
Math.pow(int i,int j);

//平方根
Math.sqrt(int i);

//获取随机数
Math.random();

------------------------------------------------------------------------------

Java产生随机数的两种方式:

1.Math.random();	范围[0,1)

  改变范围:
  Math.random() * 10 + 1			[1,11)
  
  (int)(Math.random() * 10 + 1)		1~10的整数


2.java.util.Random类

  I.  导入java.util.Random;
  
  II. 创建Random对象
      Random rd = new Random();
  
  III.通过对象调用方法
      nextInt()				返回int范围之内的随机整数
      nextInt(int i)        返回0到指定值(不包括)的随机整数
      nextDouble()			返回随机浮点数
      ...
      
练习:
1-35的随机整数
System.out.println((int)(Math.random()*35 + 1)); 
------------------------------------------------------------------------------

Java获取用户输入的信息:

java.util.Scanner		键盘扫描器

1.创建Scanner对象
  Scanner sc = new Scanner(System.in);

2.导入
  import java.util.Scanner;

3.通过对象名调用方法
  sc.nextInt();		//获取用户输入的整数
  sc.nextDouble();	//获取用户输入的浮点数
  sc.nextLine();	//获取用户输入的字符串
  
注意:如果获取的内容与方法本身不匹配,则会抛出异常:
java.lang.InputMismatchException,输入不匹配异常

-------------------------------------------------------------------------------

输入语句:
System.out.print();
System.out.println();

注意:ln表示输出完括号中的内容过后换行


例如:
System.out.print("好好学习");
System.out.println(",天天向上");

结果:
好好学习,天天向上
